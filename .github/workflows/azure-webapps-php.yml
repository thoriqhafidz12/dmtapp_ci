# This workflow will build and push a PHP application to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-php?pivots=platform-linux
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE, paste the publish profile contents as the value of the secret.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the value for the AZURE_WEBAPP_NAME. Optionally, change the AZURE_WEBAPP_PACKAGE_PATH and PHP_VERSION environment variables below.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples




name: Build and deploy PHP app to Azure Web App
on:
  workflow_call:
    inputs:
      php:
        default: '8.2'
        required: false
        type: string
      extensions:
        default: 'mbstring'
        required: false
        type: string
      composer-path:
        default: './'
        required: false
        type: string
      git-name:
        default: 'github-actions[bot]'
        required: false
        type: string
      git-email:
        default: '41898282+github-actions[bot]@users.noreply.github.com'
        required: false
        type: string
      branch:
        default: 'composer-update'
        required: false
        type: string
      title:
        default: 'composer update'
        required: false
        type: string
      commit-message:
        default: 'composer update'
        required: false
        type: string
    secrets:
      token:
        required: true
  push:
    branches: [ "master" ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: dmt_apps  # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '../app/Config/Paths.php'      # set this to the path to your web app project, defaults to the repository root
  PHP_VERSION: '8.0'                  # set this to the PHP version to use

permissions:
  contents: read

jobs:
composer_update_job:
    name: composer update
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ inputs.php }}
          extensions: ${{ inputs.extensions }}
          coverage: none
      - name: Install Composer dependencies
        working-directory: ${{ inputs.composer-path }}
        run: composer install --no-interaction --no-progress --prefer-dist --optimize-autoloader
      - name: Composer update
        id: composer
        uses: actions/github-script@v6 #https://github.com/actions/github-script
        with:
          script: |
            const result = await exec.getExecOutput('composer', ['update', '--no-install', '--working-dir=${{ inputs.composer-path }}'], {
              ignoreReturnCode: true,
            })
            const output = result.stdout + result.stderr
            core.setOutput('output', output.match(/^.* - .*$/gm)?.map(str => str.trim()).join("\n"))
      - name: Composer output
        run: |
          echo "${{ steps.composer.outputs.output }}"
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4 #https://github.com/peter-evans/create-pull-request
        with:
          token: ${{ secrets.token }}
          branch: ${{ inputs.branch }}
          commit-message: ${{ inputs.commit-message }}
          committer: ${{ inputs.git-name }} <${{ inputs.git-email }}>
          author: ${{ inputs.git-name }} <${{ inputs.git-email }}>
          title: ${{ inputs.title }}
          body: ${{ steps.composer.outputs.output }}
          add-paths: |
            *.lock
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@7c0b4c8c8ebed23eca9ec2802474895d105b11bc
        with:
          php-version: ${{ env.PHP_VERSION }}

      - name: Check if composer.json exists
        id: check_files
        uses: andstor/file-existence-action@87d74d4732ddb824259d80c8a508c0124bf1c673
        with:
          files: 'composer.json'

      - name: Get Composer Cache Directory
        id: composer-cache
        if: steps.check_files.outputs.files_exists == 'true'
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Set up dependency caching for faster installs
        uses: actions/cache@v3
        if: steps.check_files.outputs.files_exists == 'true'
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Run composer install if composer.json exists
        if: steps.check_files.outputs.files_exists == 'true'
        run: composer validate --no-check-publish && composer install --prefer-dist --no-progress

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: php-app
          path: .

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: php-app

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: .
